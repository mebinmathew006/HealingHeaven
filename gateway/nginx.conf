events {}

http {
  client_max_body_size 50M;

  # Define backend service containers
  upstream user_service {
    server user-service:8000;
  }

  upstream consultation_service {
    server consultation-service:8001;
  }

  upstream payment_service {
    server payment-service:8002;
  }

  # Map trusted origins
  map $http_origin $cors_origin {
    default "";
    "http://localhost:5173" "http://localhost:5173";
    "https://www.healinghaven.live" "https://www.healinghaven.live";
  }

  # Redirect HTTP to HTTPS
  server {
    listen 80;
    server_name api.healinghaven.live;

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # HTTPS server
  server {
    listen 443 ssl;
    server_name api.healinghaven.live;

    ssl_certificate /etc/letsencrypt/live/api.healinghaven.live/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.healinghaven.live/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Handle preflight OPTIONS globally
    location / {
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
      }

      # Forward root traffic to a default backend or return 404
      return 404;
    }

    # /users/
    location /users/ {
      proxy_pass http://user_service/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      add_header Access-Control-Allow-Origin $cors_origin always;
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
      add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
      add_header Access-Control-Allow-Credentials true always;
    }

    # /payments/
    location /payments/ {
      proxy_pass http://payment_service/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      add_header Access-Control-Allow-Origin $cors_origin always;
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
      add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
      add_header Access-Control-Allow-Credentials true always;
    }

    # /consultations/
    location /consultations/ {
      client_max_body_size 50M;
      proxy_pass http://consultation_service/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      add_header Access-Control-Allow-Origin $cors_origin always;
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
      add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
      add_header Access-Control-Allow-Credentials true always;
    }

   
  }
}
