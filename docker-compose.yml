
services:
  # User Serviceeeeeeeeeeeeeeeeeeeeeeeee
  user-service:
    build: ./services/user
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - user-db
      - redis
    volumes:
      - ./services/user/app:/app
    env_file:
      - ./services/user/app/.env

  user-db:
    image: postgres:17
    restart: unless-stopped 
    ports:
      - "5433:5432"
    env_file:
    - ./services/user/app/.env  
    volumes:
      - user_pgdata:/var/lib/postgresql/data

  gateway:
    image: nginx:alpine
    container_name: api-gateway
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx_dev.conf:/etc/nginx/nginx.conf:ro
      - ./services/consultation/app/static:/static:ro
    depends_on:
      - user-service
      - consultation-service
      - payment-service



 #  paymenttttttttttttttttttttttttttttttttttttt
  payment-service:
    build: ./services/payment
    restart: unless-stopped
    ports:
      - "8002:8002"
    depends_on:
      - payment-db
    env_file:
      - ./services/payment/app/.env 
    volumes:
      - ./services/payment/app:/app

  payment-db:
    image: postgres:17
    restart: unless-stopped
    ports:
      - "5435:5432"
    volumes:
      - payment_pgdata:/var/lib/postgresql/data
    env_file:
      - ./services/payment/app/.env
  
 #consultationnnnnnnnnnnnnnnnnnnnnnnnnnn
  consultation-service:
    build: ./services/consultation
    restart: unless-stopped
    ports:
      - "8001:8001"
    depends_on:
      - consultation-db
    env_file:
        - ./services/consultation/app/.env 
    volumes:
      - ./services/consultation/app:/app

  consultation-db:
    image: postgres:17
    restart: unless-stopped
    env_file:
      - ./services/consultation/app/.env
    ports:
      - "5434:5432"
    volumes:
      - consultation_pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379" 


  user-worker:
    build: ./services/user
    command: celery -A infra.celery_worker worker --loglevel=info
    working_dir: /app 
    depends_on:
      - user-service
      - redis
    env_file:
      - ./services/user/app/.env
    volumes:
      - ./services/user/app:/app
    restart: always

  frontend:
      build:
        context: ./frontend
      volumes:
        - ./frontend:/app
        - /app/node_modules  
      restart: unless-stopped
      ports:
        - "5173:5173"
      command: yarn dev 

volumes:
  user_pgdata:
  consultation_pgdata:
  payment_pgdata: